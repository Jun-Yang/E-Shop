1. Hadoop. If you learn nothing else this year, make it Hadoop. You need to know what MapReduce is and how to use it. Frankly, by any measure of buzz, popularity, or demand, Hadoop dominates the market in newer technologies.

Read the JavaWorld tutorial: MapReduce programming with Apache Hadoop.

You could learn other technologies, but Hadoop is harder -- and you need more resources to get further than "hello world." One of the most difficult tasks is finding a topic simple enough to teach yourself, but not so simple that you learn nothing. Also, finding a sufficiently large data set is not as easy as you might think. There are famous ones, like a big dump of Wikipedia. Maybe you could combine it with other elements and create some kind of social graph showing who likes to edit whom. Hortonworks demonstrated a similar concept with GitHub.

Once you get your hands dirty, you'll start seeing other kinds of questions you'd like MapReduce to answer. There are multiple vendors in this space, from Hadoop-specific companies like Hortonworks to multitechnology vendors like Pivotal (VMware/EMC spinoff) and existing vendors like Oracle, who are stapling Hadoop to the side of their products. Any one of these companies is capitalized enough to fly into orbit.

2. MongoDB. Though not quite as big a juggernaut as Hadoop, MongoDB is still a big deal and far easier to learn. Document databases like MongoDB fit well with big AJAX applications or object-oriented back ends. They also scale nicely. There's more than one to try, but you should probably start with Mongo, because it will be best for you from a career perspective -- most companies are already familar with the database. The company behind MongoDB, 10gen, is extremely well-capitalized with a war chest of $81 million.

3. Scala. Concurrent programming is changing, and so are the kinds of applications we're asked to build as developers. Not long ago, all low-latency trading applications were written in C or C++; now they're written in Java.

Get a hands-on introduction to Scala: Learn Scala with Specs2Spring.

The newer techniques in highly concurrent and functional object-oriented programming often debut in Scala, then make it into Java or other popular languages years later. Scala is more than a language or "syntactic candy" -- it's an ecosystem of libraries and ideas such as Akka and Play. Whether you like Scala or hate it, you need to understand the ideas it encompasses. With Spring Framework creator Rod Johnson joining the board of Typesafe and a $20 million bank, this is one bet you can count on.

4. Node.js. I'm not saying you should become a JavaScript developer and forgo all else. I'm saying you should have a taste of event-based, nonblocking systems like Node.js and at least one dynamic language like JavaScript on the server. You could do Ruby, but you'd miss that event-based, nonblocking part. There are reasons to really dislike Node.js (it's single threaded), but there's plenty to love as well. A lot of serious people use Node.js, which has a vibrant community and wide industry support -- everyone from Microsoft to Cloudbees to VMware and beyond. Node.js's well-funded ($112 million-plus) creator, Joyent, isn't trying to productize Node.js, but Joyent's cloud offering differentiates itself with a Node.js-centric PaaS.